{"version":3,"sources":["components/Auth/authcheck.jsx","Routes/ProtectedRoute.jsx","assets/Nightingale.gif","components/Auth/otp.jsx","components/Auth/signupform.jsx","components/Auth/loginform.jsx","pages/landingpage/landingpage.jsx","components/Chat/ChatDrawer.jsx","components/Ciphers/CipherForm.jsx","pages/maindesk/desk.jsx","App.js","reportWebVitals.js","index.js"],"names":["AuthCheck","a","pass","alias","fetch","method","headers","localStorage","getItem","then","response","json","console","log","authPass","PrivateRoute","Component","component","rest","useState","check","setCheck","render","props","h","bgGradient","direction","w","align","size","color","mt","fontFamily","fontSize","to","OTPForm","email","password","userOTP","setOTP","otpErrorMessage","setOTPError","history","useHistory","onSubmit","e","preventDefault","otpError","length","test","body","JSON","stringify","otp","setItem","jwt","push","padding","spacing","base","md","textAlign","bgClip","fontWeight","py","children","CheckCircle","type","isInvalid","bgColor","textColor","placeholder","borderColor","onChange","target","value","mx","height","_hover","boxShadow","borderTop","borderLeft","borderRadius","SignUpForm","userEmail","setEmail","userPassword","setPassword","userAlias","setAlias","emailValidity","setEmailValidity","databaseAliases","setDBAliases","emailErrorMessage","setEmailError","aliasErrorMessage","setAliasError","passwordErrorMessage","setPasswordError","otpVerified","setVerification","emailPattern","useEffect","aliases","indexOf","error","String","toLowerCase","Email","mailid","View","Lock","LogInForm","user_alias","user_password","aliasError","passwordError","pathname","state","pt","Login","authForm","setForm","signupButton","onClick","setFormButton","loginButton","formButton","bgSize","justify","src","Nightingale","display","lg","sx","sm","my","ChatDrawer","chatDrawer","setChatDrawer","ArrowLeft","boxSize","drawerIcon","setDrawerIcon","msg","setMsg","recAl","setRecAl","pos","zIndex","bottom","right","border","_focus","_selected","_active","bg","ArrowRight","p","as","ChevronRight","paddingBottom","resize","transform","receiver","CipherForm","cipher","setMSG","result","setResult","mb","mr","message","option","res","pb","Desk","location","Alias","setCipher","readArea","setReadArea","messages","setMessages","Messages","variant","top","ArrowBack","justifySelf","opacity","ChevronRightIcon","overflowY","Search","pointerEvents","map","Sun","Delete","pl","UnlockIcon","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30cbbf92.chunk.js","sourcesContent":["import React from \"react\";\n\nconst AuthCheck= async ()=>{\n   let pass=-1;\n   let alias=\"\";\n   await fetch(`http://127.0.0.1:5000/tail/logged-in`,\n    {\n        method: \"GET\",\n        headers: {\n                \"Content-type\": \"application/json;\",\n                \"Authorization\": `Bearer ${localStorage.getItem(\"jwt\")}`,\n                },\n    }\n    ).then((response) => response.json())\n     .then((json) => {\n        console.log(\"authcheck json:\",json);\n        if(json.authPass===\"true\"){pass=1;alias=json.alias}\n        else {pass=0;}\n    })\n    console.log(\"Pass inside AuthCheck:\",alias);\n\n    if(pass>0)return [pass,alias];\n}\n\nexport default AuthCheck;","import React,{useState,useContext} from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthCheck from '../components/Auth/authcheck';\n\nimport { Spinner, Center, Text,Flex } from \"@chakra-ui/react\";\nimport { useEffect } from 'react';\n\nconst PrivateRoute =  ({component: Component, ...rest}) => {\n    \n   \n    const [check,setCheck] = useState(-1);\n    AuthCheck().then((pass)=>{setCheck(pass[0]);console.log(\"Auth check inside promise:\",pass);})\n    console.log(\"Auth check inside private route:\",check);\n   \n    const renderRoute = (props) => {\n        if (check===-1) {\n            return (\n                <Center \n                h=\"100vh\" \n                bgGradient=\"linear(black,rgba(23, 47, 66,1))\"\n                >   \n                <Flex \n                 direction=\"column\"\n                 w=\"full\"\n                 align=\"center\"\n                 >\n                    <Spinner \n                      size=\"xl\" \n                      color=\"white\" />\n\n                    <Text \n                     mt={5}\n                     color=\"white\"\n                     fontFamily=\"monospace\" \n                     fontSize=\"2xl\">\n                         Setting you up...\n                    </Text>\n\n                 </Flex>\n                    \n                </Center>\n            );\n        } else if (check===1 ) {\n            console.log(\"found user\");\n            return (<Component {...props} />);\n        } else {\n            console.log(\"redirecting to landing page\");\n            return <Redirect to=\"/\" />;\n        }\n    };\n\n\n    return (\n        <Route {...rest} render={renderRoute} />\n    );\n    \n};\n\nexport default PrivateRoute;\n","export default __webpack_public_path__ + \"static/media/Nightingale.a597773a.gif\";","import React,{useState,useEffect} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {CheckCircleIcon} from \"@chakra-ui/icons\"\nimport \n{   Flex,\n    Stack,\n    Box,\n    Container,\n    FormControl,\n    FormErrorMessage,\n    Input,\n    FormLabel,\n    Text,\n    Button,\n    InputGroup,\n    InputLeftElement,\n    VStack,\n} from \"@chakra-ui/react\"\n\nconst OTPForm=({email,alias,password})=>{\n\n    //State for user entry\n    const [userOTP,setOTP] = useState(\"\");\n    \n    //State for form error\n    const [otpErrorMessage,setOTPError] = useState(\"\");\n\n    const history= useHistory();\n\n    const getOTP=(e)=>{\n        \n        setOTP(e.target.value)\n    }\n\n    const handleOTPSubmit=(e)=>{\n        e.preventDefault()\n        let otpError=false;\n        let otpCheck= /[^0-9]/\n        if((userOTP.length!=6)||(otpCheck.test(userOTP)==true)){setOTPError(\"Invalid OTP!\");otpError=true;}\n        if(otpError==true){return;}\n\n        fetch(\n          `http://127.0.0.1:5000/tail/signup/otp`,\n          {\n            method: \"POST\",\n            body: JSON.stringify({\n              email:email,\n              alias:alias,\n              password:password,\n              otp:userOTP\n            }),\n            headers: {\n             \"Content-type\": \"application/json\",\n          },\n          }\n        )\n          .then((response) => response.json())\n          .then((json) => {\n            console.log(json);\n            if(\"otpError\" in json){\n              setOTPError(\"Incorrect OTP! Please check again\")\n            }\n            else {localStorage.setItem(\"jwt\", json.jwt)\n            console.log(\"JWT set in OTP Signup\")}\n            history.push(\"/desk\",{\"Alias\":alias});\n\n          });\n\n\n    }\n\n    return(\n        <form onSubmit={handleOTPSubmit}>\n         <FormControl padding=\"2rem\" >\n\n                <VStack\n                 spacing={4} \n                 align=\"centre\" \n                 w=\"full\">\n\n\n            <Box w=\"full\" >\n            <Text \n             fontSize={{base:\"sm\",md:\"2xl\"}} \n             fontFamily=\"monospace\" \n             textAlign=\"center\"\n             bgGradient={{base:\"linear(to-l,white,white)\",md:\"linear(to-l, #0A114B,white)\"}}\n             bgClip=\"text\"\n             fontWeight=\"extrabold\"\n             >\n              OTP VERIFICATION\n            </Text>\n            </Box>\n\n\n            <Box \n              w=\"full\"\n              py=\"2rem\"\n              >\n                <Text\n                fontSize={{base:\"sm\",md:\"md\"}} \n                fontFamily=\"monospace\" \n                color=\"white\"\n                >\n                    We've sent an OTP number to your email address. Please enter it below. \n\n                </Text>\n            </Box>\n\n                \n            <Box w=\"full\">\n          <InputGroup>\n          <InputLeftElement children= {<CheckCircleIcon color=\"white\"/>} />\n          <Input \n            type=\"text\" \n            isInvalid={userOTP.length<6 && userOTP.length>0}\n            fontFamily=\"monospace\"\n            bgColor=\"rgba(0,0,0,0.4)\" \n            textColor=\"white\"\n            placeholder=\"Enter your OTP\"\n            borderColor=\"rgba(255,255,255,0.2)\"\n            onChange={getOTP}\n            />\n          </InputGroup>\n          <Text \n                 fontFamily=\"monospace\" \n                 fontSize={{base:\"xs\",md:\"md\"}}\n                 color=\"red.200\"\n                >\n              {otpErrorMessage} \n               </Text>\n          </Box>\n          <Button\n            mx=\"2rem\"\n            height={{base:\"2rem\",md:\"3rem\"}}\n            _hover={{bgColor:\"none\"}}\n            bgGradient=\"linear(to-l, #0A7E27 , #054876)\"\n            boxShadow=\"0px 0px 6px 6px black\"\n            borderTop=\"2px solid rgba(255,255,255,0.5)\"\n            borderLeft=\"1px solid rgba(255,255,255,0.5)\"  \n            borderRadius=\"2%\"\n            type=\"submit\"\n            >\n            <Text \n                 fontFamily=\"monospace\" \n                 fontSize={{base:\"xs\",md:\"md\"}}\n                 color=\"white\"\n                >\n              Enter\n               </Text>\n\n          </Button>\n         \n          </VStack>\n          </FormControl>\n        </form>\n    )\n\n}\n\nexport default OTPForm;","import React,{useState,useEffect} from \"react\";\nimport {EmailIcon,ViewIcon,LockIcon} from \"@chakra-ui/icons\";\nimport OTPForm from \"./otp\";\n\nimport \n{   Flex,\n    Stack,\n    Box,\n    Container,\n    FormControl,\n    FormErrorMessage,\n    Input,\n    FormLabel,\n    Text,\n    Button,\n    InputGroup,\n    InputLeftElement,\n    Link,\n    VStack,\n    Tag,\n    TagLabel,\n    TagLeftIcon\n    \n} from \"@chakra-ui/react\"\n\nconst SignUpForm=()=>{\n\n\n  //User entries\n  const [userEmail,setEmail] = useState(\"\");\n  const [userPassword,setPassword] = useState(\"\");\n  const [userAlias,setAlias] = useState(\"\");\n\n  //States for validation\n  const [emailValidity,setEmailValidity] = useState(false);\n  const [databaseAliases,setDBAliases]=useState([])\n\n  //States for errors\n  const [emailErrorMessage,setEmailError]=useState(\"\")\n  const [aliasErrorMessage,setAliasError]=useState(\"\")\n  const [passwordErrorMessage,setPasswordError]=useState(\"\")\n\n  //State for OTP\n  const [otpVerified,setVerification]=useState(false)\n\n\n\n\n  const emailPattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  \n  const getEmail=(e)=>{\n      setEmailError(\"\")\n      let mailid = e.target.value;\n      \n      setEmailValidity(emailPattern.test(String(userEmail).toLowerCase()));\n      setEmail(mailid); \n  }\n\n  const getPassword=(e)=>{\n    setPasswordError(\"\")\n    setPassword(e.target.value);\n  }\n\n  const getAlias=(e)=>{\n    setAlias(e.target.value);\n    \n  }\n\n  const toggleVerified=()=>{\n    setVerification(true);\n  }\n  \n  const handleSubmit=(e)=>{\n    let error=false;\n    e.preventDefault()\n    setEmailValidity(emailPattern.test(String(userEmail).toLowerCase()));\n    if(!emailValidity){setEmailError(\"[ Enter a proper email address! ]\"); error=true;}\n\n    if(userAlias.length==0){setAliasError(\"[ Enter an alias! ]\");error=true;}\n\n    if(userPassword.length==0){setPasswordError(\"[ Enter a password! ]\");error=true;}\n    if(error==true){console.log(\"Error is true\");return;}\n\n    let pass=true;\n    \n    console.log(\"Performing post request\")\n    fetch(`http://127.0.0.1:5000/tail/signup`,\n    {\n      method:\"POST\",\n      body: JSON.stringify({\n        email:userEmail,\n        alias:userAlias,\n        password:userPassword\n      }),\n      headers: {\n        \"Content-type\":\"application/json\"\n      },\n    }\n    ).then((response)=> response.json())\n     .then((json)=>{\n       console.log(\"Post response: \", json);\n       if(\"mailError\" in json){setEmailError(\"[ Email already exists! ]\");pass=false;}\n       if(\"aliasError\" in json){setAliasError(\"[ Alias already exists! ]\");pass=false;}\n     })\n     if(pass==true){toggleVerified()}\n  }\n\n\n  const fetchCredentialRecords=()=>{\n    fetch(\n      `http://127.0.0.1:5000/tail/user-details`,\n      {\n        method: \"GET\",\n        headers: {\n         \"Content-type\": \"application/json\",\n      },\n      }\n    )\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(json);\n        setDBAliases(json.aliases)\n        console.log(\"Fetched\")\n      });\n  }\n\n  useEffect(() => {\n    fetchCredentialRecords();\n    if(databaseAliases!=null){\n    if(databaseAliases.length>0){console.log(\"Aliases\",databaseAliases)}\n    if(databaseAliases.indexOf(userAlias)!=-1){setAliasError(\"[ Alias is taken! ]\")}\n    else{setAliasError(\"\")}\n    }\n  },[userAlias]);\n\n  if(!otpVerified){return(\n       <form onSubmit={handleSubmit}>\n        <FormControl padding=\"2rem\" >\n\n           <VStack \n            spacing={4} \n            align=\"centre\" \n            w=\"full\">\n\n           <Box w=\"full\" >\n            <Text \n             fontSize={{base:\"sm\",md:\"2xl\"}} \n             fontFamily=\"monospace\" \n             textAlign=\"center\"\n             bgGradient={{base:\"linear(to-l,white,white)\",md:\"linear(to-l, #0A114B,white)\"}}\n             bgClip=\"text\"\n             fontWeight=\"extrabold\"\n             >\n              CREATE AN ACCOUNT\n            </Text>\n            </Box>\n\n\n\n          <Box w=\"full\">\n          <Flex direction=\"row\">\n          <FormLabel>\n            <Text \n            fontFamily=\"monospace\" \n            fontSize={{base:\"xs\",md:\"md\"}}\n            color=\"white\"\n            >\n              Email \n            </Text>\n          </FormLabel>\n          <Text \n            fontFamily=\"monospace\" \n            fontSize={{base:\"xs\",md:\"md\"}}\n            color=\"red.200\"\n            >\n              {emailErrorMessage} \n            </Text>\n          \n          </Flex>\n\n          <InputGroup>\n          <InputLeftElement children= {<EmailIcon color=\"white\"/>} />\n          <Input \n            type=\"email\" \n            isInvalid={(!emailValidity && userEmail.length>0)}\n            fontFamily=\"monospace\"\n            bgColor=\"rgba(0,0,0,0.4)\" \n            borderColor=\"rgba(255,255,255,0.2)\"\n            textColor=\"white\"\n            placeholder=\"Your email ID\"\n            onChange={getEmail}\n            />\n          </InputGroup>\n          </Box>\n\n\n          <Box w=\"full\">\n          <Flex direction=\"row\">\n          <FormLabel>\n            <Text \n             fontFamily=\"monospace\" \n             fontSize={{base:\"xs\",md:\"md\"}}\n             color=\"white\"\n             >\n               Secret Alias\n            </Text>\n          </FormLabel>\n          <Text \n            fontFamily=\"monospace\" \n            fontSize={{base:\"xs\",md:\"md\"}}\n            color=\"red.200\"\n            >\n              {aliasErrorMessage} \n            </Text>\n          </Flex>\n\n          <InputGroup>\n          <InputLeftElement children= {<ViewIcon color=\"white\"/>} />\n          <Input \n            type=\"name\" \n            bgColor=\"rgba(0,0,0,0.4)\" \n            borderColor=\"rgba(255,255,255,0.2)\"\n            fontFamily=\"monospace\"\n            onChange={getAlias}\n            textColor=\"white\"\n            placeholder=\"Who will you be known as?\"/>\n          </InputGroup>\n          </Box>\n\n\n\n          <Box w=\"full\">\n          <Flex direction=\"row\">\n          <FormLabel>\n            <Text \n            fontFamily=\"monospace\" \n            fontSize={{base:\"xs\",md:\"md\"}}\n            color=\"white\"\n            >Password</Text>\n          </FormLabel>\n          <Text \n            fontFamily=\"monospace\" \n            fontSize={{base:\"xs\",md:\"md\"}}\n            color=\"red.200\"\n            >\n              {passwordErrorMessage} \n\n            </Text>\n            </Flex>\n\n          <InputGroup>\n          <InputLeftElement children= {<LockIcon color=\"white\"/>} />\n          <Input \n            type=\"password\" \n            fontFamily=\"monospace\"\n            bgColor=\"rgba(0,0,0,0.4)\" \n            borderColor=\"rgba(255,255,255,0.2)\"\n            onChange={getPassword}\n            textColor=\"white\"\n            placeholder=\"Keep it strong\"/>\n          </InputGroup>\n          </Box>\n\n          \n\n          <Button\n           mt={{base:\"1rem\",md:\"2rem\"}}\n           h={{base:\"2rem\",md:\"3rem\"}}\n           _hover={{bgColor:\"none\"}}\n           bgGradient=\"linear(to-l, rgba(102, 0, 51,0.9), red.600)\"\n           boxShadow=\"0px 0px 6px 6px black\"\n           borderTop=\"2px solid rgba(255,255,255,0.5)\"\n           borderLeft=\"1px solid rgba(255,255,255,0.5)\"  \n           borderRadius=\"2%\" \n           \n           type=\"submit\"\n           \n          >\n            <Text \n             fontFamily=\"monospace\" \n             fontSize={{base:\"xs\",md:\"md\"}}\n             color=\"white\"\n             >Proceed\n             </Text>\n          </Button>\n\n          \n\n          </VStack>\n\n\n        </FormControl>\n        </form>\n  )}\n  else{\n    return(\n      <OTPForm email={userEmail} alias={userAlias} password={userPassword}/>\n\n    )\n  }\n}\n\nexport default SignUpForm;","import React,{useState,useEffect} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {EmailIcon,ViewIcon,LockIcon} from \"@chakra-ui/icons\";\n\n\nimport \n{   Flex,\n    Stack,\n    Box,\n    Container,\n    FormControl,\n    FormErrorMessage,\n    Input,\n    FormLabel,\n    Text,\n    Button,\n    InputGroup,\n    InputLeftElement,\n    Link,\n    VStack,\n} from \"@chakra-ui/react\"\n\nconst LogInForm=()=>{\n  //States for user entries\n  const [userAlias,setAlias] = useState(\"\");\n  const [userPassword,setPassword] = useState(\"\");\n\n  //States for errors\n  const [aliasErrorMessage,setAliasError]=useState(\"\");\n  const [passwordErrorMessage,setPasswordError]=useState(\"\");\n\n  const history = useHistory();\n\n  const getPassword=(e)=>{\n    setPasswordError(\"\")\n    setPassword(e.target.value);\n  }\n\n  const getAlias=(e)=>{\n    setAlias(e.target.value);\n  }\n\n  const handleLoginSubmit=(e)=>{\n    e.preventDefault()\n    let error=false;\n    if(userAlias.length==0){setAliasError(\"[ Enter an alias! ]\");error=true;}\n\n    if(userPassword.length==0){setPasswordError(\"[ Enter a password! ]\");error=true;}\n    if(error==true){console.log(\"Error is true\");return;}\n    fetch(\n      `http://127.0.0.1:5000/tail/login`,\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          user_alias:userAlias,\n          user_password:userPassword,\n        }),\n        headers: {\n         \"Content-type\": \"application/json\",\n      },\n      }\n    )\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(json);\n        if(\"aliasError\" in json){\n          setAliasError(json.aliasError);\n         \n        }\n        else if(\"passwordError\" in json){\n          setPasswordError(json.passwordError)\n          \n        }\n        else {localStorage.setItem(\"jwt\", json.jwt);\n        console.log(\"JWT set\");\n        if(localStorage.getItem(\"jwt\"))history.push({pathname:\"/desk\",state:{\"Alias\":userAlias}});\n        }\n      })\n  }\n\n  return(\n       <form onSubmit={handleLoginSubmit}>\n        <FormControl padding=\"2rem\" >\n\n          <VStack \n           spacing={4} \n           align=\"centre\" \n           w=\"full\">\n\n          <Box w=\"full\" >\n            <Text \n             fontSize={{base:\"sm\",md:\"2xl\"}} \n             fontFamily=\"monospace\" \n             textAlign=\"center\"\n             bgGradient={{base:\"linear(to-l,white,white)\",md:\"linear(to-l, #0A114B,white)\"}}\n             bgClip=\"text\"\n             \n             fontWeight=\"extrabold\"\n             >\n              LOG IN\n            </Text>\n            </Box>\n\n          <Box w=\"full\">\n            <Flex direction=\"row\">\n          <FormLabel>\n            <Text \n            fontFamily=\"monospace\" \n            fontSize={{base:\"xs\",md:\"md\"}}\n            color=\"white\"\n            >\n              Secret Alias\n            </Text>\n          </FormLabel>\n          <Text \n            fontFamily=\"monospace\" \n            fontSize={{base:\"xs\",md:\"md\"}}\n            color=\"red.200\"\n            >\n              {aliasErrorMessage} \n            </Text>\n            </Flex>\n\n          <InputGroup>\n          <InputLeftElement children= {<ViewIcon color=\"white\"/>} />\n          <Input \n            fontFamily=\"monospace\"\n            type=\"name\" \n            textColor=\"white\"\n            borderColor=\"rgba(255,255,255,0.2)\"\n            bgColor=\"rgba(0,0,0,0.4)\" \n            onChange={getAlias}\n            placeholder=\"You are?\"/>\n          </InputGroup>\n          </Box>\n\n          <Box w=\"full\" pt=\"1rem\">\n          <Flex direction=\"row\">\n          <FormLabel>\n           \n            <Text \n            fontFamily=\"monospace\" \n            fontSize={{base:\"xs\",md:\"md\"}} \n            color=\"white\">\n              Password\n            </Text>\n           \n          </FormLabel>\n          <Text \n            fontFamily=\"monospace\" \n            fontSize={{base:\"xs\",md:\"md\"}}\n            color=\"red.200\"\n            >\n              {passwordErrorMessage} \n\n            </Text>\n            </Flex>\n\n          <InputGroup>\n          <InputLeftElement children= {<LockIcon color=\"white\"/>} />\n          <Input \n            fontFamily=\"monospace\"\n            type=\"password\" \n            textColor=\"white\"\n            borderColor=\"rgba(255,255,255,0.2)\"\n            bgColor=\"rgba(0,0,0,0.4)\" \n            onChange={getPassword}\n            placeholder=\"You know it\"/>\n          </InputGroup>\n          </Box>\n\n          \n          <Box w=\"full\" pt={{md:\"5rem\"}}>\n          <Button\n           w=\"full\"\n           h={{base:\"2rem\",md:\"3rem\"}}\n           _hover={{bgColor:\"none\"}}\n           bgGradient=\"linear(to-l, rgba(102, 0, 51,0.9), red.600)\"\n           boxShadow=\"0px 0px 6px 6px black\"\n           borderTop=\"2px solid rgba(255,255,255,0.5)\"\n           borderLeft=\"1px solid rgba(255,255,255,0.5)\"  \n           borderRadius=\"2%\" \n           type=\"submit\"\n          >\n            <Text \n            fontFamily=\"monospace\" \n            fontSize={{base:\"xs\",md:\"md\"}} \n            color=\"white\"\n            >\n              Go in\n            </Text>\n          </Button>\n          </Box>\n\n          </VStack>\n\n\n        </FormControl>\n        </form>\n\n        \n  \n  )\n}\n\n\n\nexport default LogInForm;","import React,{useState,useEffect} from \"react\";\nimport {EmailIcon,ViewIcon,LockIcon} from \"@chakra-ui/icons\";\nimport Nightingale from \"../../assets/Nightingale.gif\"\nimport SignUpForm from \"../../components/Auth/signupform\";\nimport LogInForm from \"../../components/Auth/loginform\";\n\nimport \"./landingpage.css\";\nimport \n{   Flex,\n    Stack,\n    Box,\n    Container,\n    FormControl,\n    FormErrorMessage,\n    Input,\n    FormLabel,\n    Text,\n    Button,\n    InputGroup,\n    InputLeftElement,\n    Link,\n    VStack,\n    Image,\n    Heading\n  \n} from \"@chakra-ui/react\"\n\n const Login=()=> {\n\n\n   \n    const [authForm,setForm] = useState(<SignUpForm/>)\n\n    const InitialiseSignUp =()=>{\n      setForm(<SignUpForm/>)\n      setFormButton(signupButton)\n    }\n\n    const InitialiseLogIn = ()=>{\n      setForm(<LogInForm/>)\n      setFormButton(loginButton)\n    }\n\n    const signupButton=(<Button\n    mx=\"2rem\"\n    height={{base:\"2rem\",md:\"3rem\"}}\n    _hover={{bgColor:\"none\"}}\n    bgGradient=\"linear(to-l, #0E1442 , #374087)\"\n    boxShadow=\"0px 0px 6px 6px black\"\n    borderTop=\"2px solid rgba(255,255,255,0.5)\"\n    borderLeft=\"1px solid rgba(255,255,255,0.5)\"  \n    borderRadius=\"2%\"\n    onClick={InitialiseLogIn}\n   >\n      <Text \n      fontFamily=\"monospace\" \n      fontSize={{base:\"xs\",md:\"md\"}}\n      color=\"white\"\n      >\n        Log in with existing account\n      </Text>\n\n   </Button>)\n    \n    const loginButton=(<Button\n      mx=\"2rem\"\n      height={{base:\"2rem\",md:\"3rem\"}}\n      \n      _hover={{bgColor:\"none\"}}\n      bgGradient=\"linear(to-l, #0E1442 , #374087)\"\n      boxShadow=\"0px 0px 6px 6px black\"\n      borderTop=\"2px solid rgba(255,255,255,0.5)\"\n      borderLeft=\"1px solid rgba(255,255,255,0.5)\"  \n      borderRadius=\"2%\" \n      color=\"white\"\n      onClick={InitialiseSignUp}\n     >\n        <Text fontFamily=\"monospace\" fontSize={{base:\"xs\",md:\"md\"}}>I'm new here</Text>\n     </Button>)\n\n    const [formButton,setFormButton] = useState(signupButton)\n\n     \n  return (\n    \n     <Flex\n       direction=\"column\"\n       align=\"center\"\n       w=\"100%\" \n       h=\"100vh\" \n       bgColor=\"black\"\n       bgGradient={{base:\"linear(90deg,rgba(12, 25, 50 ,0.7),rgba(12, 25, 50 ,0.2))\",md:\"linear(45deg,rgba(7, 10, 53,0.5),rgba(7, 10, 53,0.2))\"}}\n     \n       bgSize=\"200% 200%\"\n      > \n     <Stack\n      direction={{base:\"column\",md:\"row\"}}\n      w=\"full\"\n      h=\"full\"\n      align=\"center\"\n      justify={{base:\"center\",md:\"space-evenly\"}}\n     >\n       <Image  src={Nightingale}  h=\"15%\" w=\"32%\" display={{base:\"block\",md:\"none\"}} mx=\"34%\" />\n      \n      <Box h={{base:\"auto\",md:\"35rem\"}} w={{base:\"15rem\",lg:\"45rem\"}} textAlign={{base:\"center\",md:\"left\"}} mt={{base:\"0rem\",md:\"auto\"}} >\n        <Text  \n           fontSize={{base:\"3xl\",lg:\"6xl\"}} \n           fontFamily=\"monospace\"      \n           sx={{\"animation\":\"Title 3s ease infinite\"}}\n           bgClip=\"text\" >\n             NIGHTINGALE\n        </Text>\n\n        <Text \n           display={{base:\"none\",md:\"block\"}}\n           fontFamily=\"monospace\" \n           fontSize={{base:\"xs\",sm:\"md\",md:\"xl\",lg:\"3xl\"}} \n           pt=\"1rem\" \n           color=\"#C0D7F1\">\n             Take end-to-end encryption and privacy into your own hands.\n        </Text>\n\n        <Text \n           display={{base:\"none\",md:\"block\"}}\n           fontFamily=\"monospace\" \n           fontSize={{md:\"lg\",lg:\"2xl\"}} \n           pt=\"1rem\"\n           color=\"white\"\n           >\n             Encrypt and decrypt your chats with the widest set of cryptographic tools you'll find in one place.\n        </Text>\n        <Image  src={Nightingale}  h={{md:\"40%\",lg:\"50%\"}} w={{md:\"60%\",lg:\"50%\"}} display={{base:\"none\",md:\"flex\"}} mx=\"25%\" />\n      </Box>\n\n      <Flex\n      align=\"centre\"\n      direction=\"column\"\n      my={{base:\"5rem\",md:\"5rem\"}}\n      h={{base:\"30rem\",md:\"35rem\"}}\n      w={{base:\"15rem\",sm:\"25rem\",lg:\"30rem\"}} \n      bgGradient=\"linear(to-r,rgba(12, 25, 50 ,0.7),rgba(12, 25, 50 ,0.2))\" \n      borderRadius=\"5%\" \n      boxShadow=\"4px 4px 4px 4px rgba(42, 47, 88,0.3)\"\n      borderTop=\"2px solid rgba(255,255,255,0.5)\"\n      borderLeft=\"1px solid rgba(255,255,255,0.5)\"  \n      >\n       {authForm}\n\n       {formButton}\n\n        \n\n       \n      </Flex>\n      </Stack>\n     </Flex>\n   \n    \n  );\n}\n\nexport default Login;\n","import React,{useState} from \"react\";\nimport {\n    ViewIcon,\n    ArrowRightIcon,\n    ChevronLeftIcon,\n    ChevronRightIcon,\n    ArrowLeftIcon\n} from \"@chakra-ui/icons\";\n\nimport Nightingale from \"../../assets/Nightingale.gif\"\nimport {\n    Flex,\n    Box,\n    Button,\n    Text,\n    Image,\n    Heading,\n    VStack,\n    FormControl,\n    FormLabel,\n    InputGroup,\n    InputLeftElement,\n    Input,\n    Textarea,\n  \n} from \"@chakra-ui/react\"\n\n\nconst ChatDrawer=(alias)=>{\n\n    const [chatDrawer,setChatDrawer] = useState(false);\n    const [drawerIcon,setDrawerIcon] = useState( <ArrowLeftIcon \n        color=\"white\"\n        //border=\"2px solid white\"\n        boxSize={4}/>);\n\n    const [msg,setMsg]= useState(\"\");\n    const [recAl, setRecAl]=useState(\"\");\n    \n    const send=()=>{\n        fetch(\n            `http://127.0.0.1:5000/tail/send`,\n            {\n              method: \"POST\",\n              body: JSON.stringify({\n                receiver:recAl,\n                msg:msg\n               \n              }),\n              headers: {\n               \"Content-type\": \"application/json\",\n               \"Authorization\": `Bearer ${localStorage.getItem(\"jwt\")}`,\n            },\n            }\n          )\n            .then((response) => response.json())\n            .then((json) => {\n              console.log(\"sending results: \",json);\n            \n            })\n\n    }\n\n    const handleChange=(e)=>{\n        setMsg(e.target.value);\n    }\n\n    const handleAlias=(e)=>{\n        setRecAl(e.target.value);\n    }\n\n    const ToggleChat=()=>{\n        setChatDrawer(!chatDrawer);\n        if(!chatDrawer){setDrawerIcon(<ArrowRightIcon \n            color=\"white\"\n            boxSize={4}/>);}\n        else{\n            setDrawerIcon(<ArrowLeftIcon \n                color=\"white\"\n                //border=\"2px solid white\"\n                boxSize={4}/>);\n        }\n    }\n\n    return(\n        <Flex\n        pos=\"fixed\"\n        zIndex={10}\n        bgColor=\"green\"\n        bottom=\"0%\"\n        right=\"0%\"\n        bgColor=\"rgba(24, 31, 41,1)\"\n        boxShadow=\"4px 4px 4px 4px rgba(42, 47, 88,0.3)\"\n        borderTop=\"3px solid rgba(28, 29, 31,1)\"\n        borderLeft=\"1px solid rgba(255,255,255,0.2)\"\n        borderRadius=\"1%\"\n        h={{base:\"60%\",md:\"60%\",lg:\"70%\"}}\n       \n        >\n          <Button\n          _hover={{bgColor:\"rgba(63, 67, 77,0.9)\"}}\n          h=\"100%\"\n          w=\"1vw\"\n          border=\"2px solid black\"\n          bgColor=\"rgba(28, 29, 31,1)\"\n          _focus={{boxShadow:\"none\"}}\n          _selected={{bgColor:\"none\"}}\n          _active={{bg:\"none\"}}\n          onClick={ToggleChat}\n          >\n             {drawerIcon}\n          </Button>\n         \n          \n            <form>\n            <FormControl \n              p={5} \n              h=\"full\">\n    \n            <VStack\n             spacing={4}\n             display={chatDrawer?\"block\":\"none\"}\n             align=\"center\"\n             fontFamily=\"monospace\"\n             textColor=\"rgba(255,255,255,0.5)\"\n             h=\"full\"\n             w={{base:\"50vw\",md:\"30vw\"}}\n             >\n    \n             <Text\n               as=\"h3\"\n               fontSize={{base:\"2xl\",md:\"4xl\"}}\n               color=\"rgba(255,255,255,0.5)\"\n               textAlign=\"center\"\n             >\n                 MESSENGER\n            </Text> \n    \n            <Box w=\"full\">\n            <FormLabel>\n                <Text\n                fontSize=\"lg\">\n                    Receiver Alias:\n                </Text>\n            </FormLabel>\n    \n            <InputGroup>\n              <InputLeftElement children= {<ChevronRightIcon color=\"white\"/>}/>\n              <Input \n                _focus={{bg:\"rgba(0,0,0,0.4)\",border:\"none\"}}\n                _hover={{border:\"none\"}}\n                border=\"none\"\n                type=\"name\" \n                bgColor=\"rgba(0,0,0,0.4)\" \n                borderColor=\"rgba(255,255,255,0.2)\"\n                fontFamily=\"monospace\"\n                textColor=\"white\" \n                onChange={handleAlias}\n                />\n            </InputGroup>\n            </Box>\n    \n            <Box \n             w=\"full\"\n             h=\"35%\"\n             paddingBottom={10}\n             >\n            <FormLabel>\n                <Text\n                fontSize=\"lg\">\n                    Message:\n                </Text>\n            </FormLabel>\n    \n           \n              <Textarea\n                 h=\"full\"\n                 resize=\"none\"\n                _focus={{bg:\"rgba(0,0,0,0.4)\",border:\"none\"}}\n                _hover={{border:\"none\"}}\n                border=\"none\"\n                type=\"name\" \n                bgColor=\"rgba(0,0,0,0.4)\" \n                borderColor=\"rgba(255,255,255,0.2)\"\n                fontFamily=\"monospace\"\n                textColor=\"white\"\n                \n                onChange={handleChange}\n                />\n            </Box>\n    \n            <Button\n             w=\"full\"\n             _hover={{bgGradient:\"radial(rgb(5, 29, 15),rgba(23, 102, 64,0.95))\",border:\"none\",transform:\"scale(1.02)\"}}\n             _focus={{border:\"none\"}}\n             bgColor=\"rgba(23, 102, 64,1)\"\n             boxShadow=\"0 0 2px 2px rgba(0,0,0,0.5)\"\n             onClick={send}\n             >\n                 <Text\n                 fontSize=\"2xl\"\n                 color=\"rgba(255,255,255,0.7)\"\n                 >\n                     SEND\n                 </Text>\n             </Button>\n            \n            </VStack>\n            </FormControl>\n            </form>\n       \n    \n        </Flex>\n    \n    )\n}\n\nexport default ChatDrawer;","import React,{useState,useEffect} from \"react\";\nimport{\n    Flex,\n    Box,\n    Container,\n    Text,\n    FormControl,\n    FormLabel,\n    Input,\n    RadioGroup,\n    Radio,\n    Textarea,\n    Button\n} from \"@chakra-ui/react\";\n\nconst CipherForm=({cipher})=>{\n    \n    const [msg,setMSG] = useState(\"\");\n    const [result,setResult] = useState(\"\");\n    \n    const handleMsg=(e)=>{\n        console.log(e.target.value)\n        setMSG(e.target.value)\n    }\n    const cipherEncrypt=(cipher)=>{\n        fetch(\n            `http://127.0.0.1:5000/ciphers/AES`,\n            {\n              method: \"POST\",\n              body: JSON.stringify({\n                message:msg,\n                option:\"encrypt\",\n              }),\n              headers: {\n               \"Content-type\": \"application/json\",\n            },\n            }\n          )\n            .then((response) => response.json())\n            .then((json) => {\n              console.log(\"Encryption results: \",json);\n              let ciphertext = json[\"Ciphertext\"];\n              let key = json[\"Key\"];\n              let res = \"Ciphertext: \"+ciphertext+\"\\n\\nKey: \"+key;\n              console.log(\"res: \",res)\n              setResult(res)\n              console.log(\"result: \",result)\n            })\n    }\n    \n    \n    return(\n        <form>\n            <FormControl textColor=\"white\">\n                <Text \n                  mt={5}\n                  mb={10}\n                  textAlign=\"center\"\n                  fontSize=\"5xl\"\n                >\n                    {cipher}\n                </Text>\n                <FormLabel pt={5}>\n                    <Text \n                     fontSize={{base:\"xl\",md:\"2xl\"}}\n                    >\n                        Message:\n                    </Text>\n                </FormLabel>\n                <Input\n                w={{base:\"90%\",md:\"50%\"}} \n                h={{base:\"30vw\",md:\"6vw\",lg:\"5vw\"}}\n                my={5}\n                fontSize=\"xl\"\n                onChange={handleMsg}\n                placeholder=\"Message to encrypt...\"/>\n\n                <FormLabel pt={5}>\n                    <Text \n                     fontSize={{base:\"xl\",md:\"2xl\"}}\n                    >\n                        Key:\n                    </Text>\n                </FormLabel>\n\n                <Input\n                w={{base:\"90%\",md:\"50%\"}} \n                h={{base:\"30vw\",md:\"6vw\",lg:\"5vw\"}}\n                my={5}\n                fontSize=\"xl\"\n                placeholder=\"Relevant only if decrypting\"/>\n\n               <Flex \n               direction=\"row\"\n               align=\"flex-start\"\n               my= {10}\n               >\n                   <Button\n                   mr={5}\n                  _hover={{bgGradient:\"linear(green.800,green.600)\"}}\n                  bgGradient=\"linear(green.700,#0C723A)\"\n                  boxShadow=\"0px 7px black\"\n                  w={{md:\"25%\"}}\n                  onClick={cipherEncrypt}\n                  >\n                      <Text\n                        fontSize={{base:\"lg\",md:\"2xl\"}}>\n                            Encrypt\n                        </Text>\n                  </Button>\n\n                  <Button\n                  _hover={{bgGradient:\"linear(red.800,red.700)\"}}\n                  bgGradient=\"linear(red.700,#4d0000)\"\n                  boxShadow=\"0px 7px black\"\n                  w={{md:\"25%\"}}\n                  >\n                      <Text\n                         fontSize={{base:\"lg\",md:\"2xl\"}}>\n                        \n                            Decrypt\n                        </Text>\n                  </Button>\n               \n               </Flex> \n                \n\n                  \n\n                <FormLabel \n                  pt={10}\n                  pb={5}\n                >\n                     <Text\n                      fontSize=\"2xl\"\n                     >\n                         Result\n                     </Text>\n                     \n                </FormLabel>\n                <Textarea w={{base:\"90%\",md:\"70%\"}} h={{base:\"5vh\",md:\"20vh\"}} textColor=\"white\" value={result}/>\n\n              \n            </FormControl>\n        </form>\n    )\n}\n\nexport default CipherForm;","import React,{useState,useContext, useEffect} from \"react\"\nimport Nightingale from \"../../assets/Nightingale.gif\"\nimport ChatDrawer from \"../../components/Chat/ChatDrawer\";\nimport CipherForm from \"../../components/Ciphers/CipherForm\";\nimport {\n    ArrowBackIcon,\n    InfoIcon,\n    EditIcon,\n    SearchIcon,\n    ChevronRightIcon,\n    ViewIcon,\n    SunIcon,\n    DeleteIcon,\n    UnlockIcon\n} from \"@chakra-ui/icons\"\nimport {\n    Flex,\n    Box,\n    Container,\n    Button,\n    Text,\n    Center,\n    Stack,\n    Image,\n    Heading,\n    VStack,\n    FormControl,\n    FormLabel,\n    InputGroup,\n    InputLeftElement,\n    Input,\n    Spinner,\n    Textarea,\n    Divider,\n    List,\n    ListIcon,\n    ListItem,\n    Link,\n    Table,\n    Thead,\n    Tbody,\n    Tfoot,\n    Tr,\n    Th,\n    Td,\n    TableCaption,\n    HStack,\n} from \"@chakra-ui/react\"\nimport { useHistory } from \"react-router-dom\"\n\nconst Desk=(props)=>{\n    const history = useHistory();\n    const alias = props.location.state.Alias;\n\n    const [cipher,setCipher]=useState(\"AES\")\n\n    const [readArea,setReadArea] = useState(\"\");\n\n    //const messages = [['Alucard', 'PostgreSQL can store the representation of an “infinite” date, timestamp, or interval. Infinite dates are not available to Python', '10th Oct 2008'], ['Alucard', 'PostgreSQL can store the representation of an “infinite” date, timestamp, or interval. Infinite dates are not available to Python', '10th Oct 2008'], ['Alucard', 'PostgreSQL can store the representation of an “infinite” date, timestamp, or interval. Infinite dates are not available to Python', '10th Oct 2008']]\n    const [messages,setMessages]=useState([])\n\n    const getInbox=()=>{\n      fetch(\n        `http://127.0.0.1:5000/tail/get-inbox`,\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            alias:alias,\n           \n          }),\n          headers: {\n           \"Content-type\": \"application/json\",\n        },\n        }\n      )\n        .then((response) => response.json())\n        .then((json) => {\n          console.log(\"message results: \",json);\n          setMessages(json.Messages)\n        })\n    }\n   \n    useEffect(()=>{\n      getInbox();\n    },[])\n  if(messages.length>0){\n   return(\n    \n<Flex\n  direction=\"column\"\n  align=\"center\"\n  bgGradient=\"linear(45deg,black,#172334)\"\n> \n\n    <ChatDrawer alias={alias} />\n    <Button\n      pos=\"absolute\"\n      variant={{base:\"ghost\",md:\"solid\"}}\n      zIndex={1}\n      mr={5}\n      mt={5}\n      top=\"0%\"\n      right=\"0%\"\n      w=\"5%\"\n      h={{base:\"20vw\",md:\"5vw\"}}\n      _hover={{bgGradient:\"linear(rgba(156, 45, 65,0.5),rgba(222, 102, 124,1))\"}}\n      _focus={{bgGradient:\"linear(rgba(156, 45, 65,0.5),rgba(222, 102, 124,1))\"}}\n      _selected={{bgGradient:\"linear(rgba(156, 45, 65,0.5),rgba(222, 102, 124,1))\"}}\n      bgGradient={{md:\"linear(rgba(156, 45, 65,1),rgba(222, 102, 124,1))\"}}\n      justify=\"center\"\n    >\n                <VStack >\n                    <ArrowBackIcon boxSize=\"1.5em\" color=\"black\"/>\n                      <Text \n                        fontSize=\"xs\"\n                        display={{base:\"none\",md:\"block\"}}\n                      >\n                         Log out\n                      </Text>\n                </VStack>\n    </Button>\n\n\n\n   <Flex\n   align=\"center\"\n   direction=\"column\"\n   w=\"full\"\n   mt={10}\n   > \n         <Image \n          justifySelf=\"center\"\n          src={Nightingale}\n          h=\"30%\"\n          w={{base:\"25%\",md:\"6%\"}}\n          />\n        \n\n          <Text \n           //mt={2}\n           textAlign=\"center\"\n           fontSize={{base:\"3xl\",md:\"4xl\",lg:\"5xl\"}}\n           color=\"white\"\n           fontFamily=\"monospace\"\n           bgGradient=\"linear(rgba(55, 128, 212,1),rgba(28, 230, 179,0.7))\"\n           bgClip=\"text\"\n           > \n             NIGHTINGALE\n           </Text>\n       \n         <Divider\n           w=\"50vw\"\n           opacity={0.2}\n           mx=\"auto\"\n           my={3}\n         />\n\n          <Text \n            textAlign=\"center\"\n            fontSize={{base:\"2xl\",md:\"4xl\"}}\n            color=\"white\"\n            fontFamily=\"monospace\"\n            bgGradient=\"linear(rgba(131, 197, 247,1),rgba(57, 126, 179,0.7))\"\n            bgClip=\"text\"\n          > \n              Welcome, {alias}.\n          </Text>\n   \n  \n  \n   </Flex>\n   \n   <Stack\n       direction={{base:\"column\",md:\"row\"}}\n       mt={20}\n       w=\"full\"\n       h=\"50vh\"\n       bgGradient=\"linear(-45deg,rgba(38, 18, 31,0.7),black)\"\n       textColor=\"white\"\n       >   \n        \n        <Flex\n        direction=\"column\"\n        w=\"full\"\n        h=\"full\"\n        align=\"center\"\n        p={{base:2,md:7}}\n        > \n            \n\n            <Stack\n             direction={{base:\"column\",md:\"row\"}}\n             align={{md:\"center\"}}\n             h=\"80%\"\n             fontFamily=\"monospace\"\n             w=\"full\" \n            > \n                <Stack\n                direction={{base:\"row\",md:\"column\"}}\n                align={{md:\"center\"}}\n                w={{base:\"full\",md:\"23%\"}}\n                h=\"full\"\n                display={{base:\"none\",md:\"block\"}}\n                pt={5}\n                >\n                    <Text\n                      textAlign=\"center\"\n                      w=\"full\"\n                      color=\"rgb(166, 93, 117)\"\n                      fontSize={{base:\"2xl\",md:\"3xl\"}}>\n                          Inbox\n                    </Text>\n                    <List spacing={5} fontSize={{md:\"md\"}} >\n                        <ListItem>\n                          <ListIcon as={ChevronRightIcon} color=\"white\"/>\n                          <Link variant=\"ghost\" >All</Link> \n                        </ListItem>\n\n                        <ListItem>\n                          <ListIcon as={ChevronRightIcon} color=\"white\"/>\n                          <Link variant=\"ghost\">Starred</Link> \n                        </ListItem>\n\n                        <ListItem>\n                          <ListIcon as={ChevronRightIcon} color=\"white\"/>\n                          <Link variant=\"ghost\">Sent</Link> \n                        </ListItem>\n\n                        <ListItem>\n                          <ListIcon as={ChevronRightIcon} color=\"white\"/>\n                          <Link variant=\"ghost\">Trash</Link> \n                        </ListItem>                        \n                    </List>\n                </Stack>\n\n                <Box \n                 h=\"full\"\n                 w={{base:\"full\",md:\"70%\"}}\n                 mt={5}\n                 p={{base:0,md:10}}\n                 fontFamily=\"monospace\"\n                 textColor=\"whiteAlpha.700\"\n                 bgColor=\"rgba(38, 18, 31,0.6)\"\n                 overflowY=\"scroll\"\n                 >\n\n                   <InputGroup mb={4}>\n                    <InputLeftElement\n                      children={<SearchIcon color=\"white\"/>}\n                      pointerEvents=\"none\"\n                    />\n                    <Input w={{base:\"full\",md:\"100%\"}} placeholder=\"Search alias..\" />\n                   </InputGroup>\n\n                     <Table variant=\"simple\" display={{base:\"block\",md:\"block\"}} >\n                       <Thead>\n                         <Tr>\n                           <Th>Time</Th>\n                           <Th>Alias</Th>\n                           <Th>Read</Th>\n                           <Th>Star</Th>\n                           <Th>Delete</Th>\n                         </Tr>\n                       </Thead>\n                       \n                       <Tbody>\n                         {messages.map((msg)=>{\n                         return(<Tr>\n                           <Td>{msg[2]}</Td>\n                           <Td>{msg[0]}</Td>\n                           <Td>\n                              <Button\n                                 size=\"sm\"\n                                 bgColor=\"green.700\"\n                                 _hover={{bgColor:\"green.800\"}}\n                                 _focus={{bgColor:\"green.700\"}}\n                                 onClick={()=>{setReadArea(msg[1])}}\n                              >\n                                  <ViewIcon color=\"white\"/>\n                              </Button>\n                           </Td>\n                            \n                            <Td>\n                             <Button\n                                 size=\"sm\"\n                                 bgColor=\"yellow.700\"\n                                 _hover={{bgColor:\"yellow.800\"}}\n                                 _focus={{bgColor:\"yellow.700\"}}\n                              >\n                                  <SunIcon color=\"white\"/>\n                              </Button>\n                            </Td>\n                                \n                            <Td>\n                              <Button\n                                 size=\"sm\"\n                                 bgColor=\"red.700\"\n                                 _hover={{bgColor:\"red.800\"}}\n                                 _focus={{bgColor:\"red.700\"}}\n                                >\n                                  <DeleteIcon color=\"white\"/>\n                              </Button>\n                            </Td>\n                         </Tr>)\n                        } \n                         )}\n                       </Tbody>\n                     </Table>\n\n                     \n\n\n                  \n                 \n                 </Box>\n                 <Box\n                   mt={5}\n                   w={{base:\"full\",md:\"30%\"}}\n                   h=\"full\"\n                   textColor=\"whiteAlpha.500\"\n                   bgGradient=\"linear(rgba(115, 30, 58,0.9),rgba(38, 18, 31,0.9))\"\n                   >\n                     <Text\n                     mt={5}\n                      fontSize=\"2xl\"\n                      textAlign=\"center\"\n                      fontWeight=\"bold\"\n                     >\n                        Reading Desk\n                     </Text>\n\n                     <Text\n                     mt={5}\n                      fontSize=\"lg\"\n                      textAlign=\"center\"\n                      fontWeight=\"bold\"\n                     >\n                        {readArea}\n                     </Text>\n\n\n                      \n                   </Box>\n            </Stack> \n\n            </Flex> \n     </Stack>\n       \n      <Stack\n       direction={{base:\"column\",md:\"row\"}}\n       w=\"full\"\n       \n       //align=\"center\"\n       fontFamily=\"monospace\"\n       \n      >\n        <VStack\n          w={{base:\"full\",md:\"25%\"}}\n          bgGradient=\"linear(rgba(0,0,0,0.6),black)\"\n          p={7}\n        >\n          <Text\n            bgGradient=\"linear(rgb(2, 46, 59),rgb(15, 212, 153))\"\n            bgClip=\"text\"\n            fontSize=\"3xl\"\n            fontWeight=\"bold\"\n           >Ciphers</Text>\n          \n          <Box\n          textColor=\"white\"\n          pt={5}\n          >\n          <List spacing={5}>\n            <ListItem>\n              <Text\n               color=\"rgb(8, 171, 252)\"\n              >\n                Symmetric Ciphers\n              </Text>\n\n               <Box\n               pl={5}\n              >\n                <List spacing={2}>\n                  <ListItem>\n                    <ListIcon as={UnlockIcon} color=\"white.600\" />\n                      <Link \n                        variant=\"ghost\"\n                        onClick={()=>{setCipher(\"AES\")}}\n                      >\n                        AES\n                      </Link>\n                  </ListItem>\n\n                  <ListItem>\n                    <ListIcon as={UnlockIcon} color=\"white.600\" />\n                      <Link \n                        variant=\"ghost\"\n                        onClick={()=>{setCipher(\"DES\")}}\n                      >\n                          DES\n                      </Link>\n                  </ListItem>\n\n                  <ListItem>\n                    <ListIcon as={UnlockIcon} color=\"white.600\" />\n                      <Link \n                        variant=\"ghost\"\n                        onClick={()=>{setCipher(\"Triple DES\")}}\n                      >\n                        Triple DES\n                      </Link>\n                  </ListItem>\n\n                </List>\n              </Box>\n            </ListItem>\n\n            <ListItem>\n              <Text\n               color=\"rgb(8, 171, 252)\"\n              >\n                Asymmetric and Other Schemes\n              </Text>\n              \n\n\n               <Box\n               pl={5}\n              >\n                <List spacing={2}>\n                  <ListItem>\n                    <ListIcon as={UnlockIcon} color=\"white.600\" />\n                    <Link \n                        variant=\"ghost\"\n                        onClick={()=>{setCipher(\"RSA\")}}\n                      >\n                        RSA\n                      </Link>\n                  </ListItem>\n\n                  <ListItem>\n                    <ListIcon as={UnlockIcon} color=\"white.600\" />\n                    <Link \n                        variant=\"ghost\"\n                        onClick={()=>{setCipher(\"Diffie-Hellman\")}}\n                      >\n                        Diffie-Hellman\n                      </Link>\n                  </ListItem>\n\n                  <ListItem>\n                    <ListIcon as={UnlockIcon} color=\"white.600\" />\n                    <Link \n                        variant=\"ghost\"\n                        onClick={()=>{setCipher(\"ECC\")}}\n                      >\n                        ECC\n                      </Link>\n                  </ListItem>\n\n                \n                </List>\n              </Box>\n            </ListItem>\n\n\n            <ListItem>\n              <Text\n               color=\"rgb(8, 171, 252)\"\n              >\n                Classics\n              </Text>\n\n               <Box\n               pl={5}\n              >\n                <List spacing={2}>\n                  <ListItem>\n                    <ListIcon as={UnlockIcon} color=\"white.600\" />\n                    <Link \n                        variant=\"ghost\"\n                        onClick={()=>{setCipher(\"Caesar Cipher\")}}\n                      >\n                        Caesar Cipher\n                      </Link>\n                  </ListItem>\n\n                  <ListItem>\n                    <ListIcon as={UnlockIcon} color=\"white.600\" />\n                    <Link \n                        variant=\"ghost\"\n                        onClick={()=>{setCipher(\"Vigenere Cipher\")}}\n                      >\n                        Vigenere Cipher\n                      </Link>\n                  </ListItem>\n\n                  <ListItem>\n                    <ListIcon as={UnlockIcon} color=\"white.600\" />\n                    <Link \n                        variant=\"ghost\"\n                        onClick={()=>{setCipher(\"Playfair Cipher\")}}\n                      >\n                        Playfair Cipher\n                      </Link>\n                  </ListItem>\n\n                </List>\n              </Box>\n            </ListItem>\n\n\n\n          </List>\n          </Box>\n\n\n        </VStack>\n\n        <Box \n         w=\"full\" \n         h=\"full\"\n         p={10}\n         //bgColor=\"green\"\n         >\n           <CipherForm cipher={cipher} />\n        </Box>\n      </Stack>\n\n      \n\n</Flex> \n    )\n                      }\n    else{\n      return(\n        <Center \n                h=\"100vh\" \n                bgGradient=\"linear(black,rgba(23, 47, 66,1))\"\n                >   \n                <Flex \n                 direction=\"column\"\n                 w=\"full\"\n                 align=\"center\"\n                 >\n                    <Spinner \n                      size=\"xl\" \n                      color=\"white\" />\n\n                    <Text \n                     mt={5}\n                     color=\"white\"\n                     fontFamily=\"monospace\" \n                     fontSize=\"2xl\">\n                         Loading your inbox...\n                    </Text>\n\n                 </Flex>\n                    \n                </Center>\n      )\n    }\n}\n\nexport default Desk;\n\n","\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport PrivateRoute from \"./Routes/ProtectedRoute.jsx\";\nimport React,{useEffect,Component} from \"react\";\nimport LandingPage from \"./pages/landingpage/landingpage\";\nimport Desk from \"./pages/maindesk/desk\";\n\nimport AuthCheck from \"./components/Auth/authcheck.jsx\";\nimport { useState } from \"react\";\n\n\nconst App=()=> {\n\n  return (\n    <Router>\n    <ChakraProvider>\n      <Switch>\n     <Route exact path=\"/\" render={()=><LandingPage />} />\n     <PrivateRoute component={Desk} path=\"/desk\" exact />\n     </Switch>\n     </ChakraProvider>\n     </Router>\n  );\n\n}\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}